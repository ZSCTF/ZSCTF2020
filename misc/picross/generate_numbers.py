# -*- coding: utf-8 -*-
from pprint import pprint

from more_itertools import sliced, split_at
from PIL import Image

FOREGROUND = (0, 0, 0, 255)
BACKGROUND = (255, 255, 255, 255)

img = Image.open('zsctf2020_qrcode_modified.png')
data = list(sliced([1 if i == FOREGROUND else 0 for i in img.getdata()], img.width))
pprint(data, compact=True, width=100)

row_numbers = []
for row in data:
    row_number = [len(x) for x in split_at(row, lambda x: x == 0) if x]
    row_numbers.append(row_number)
pprint(row_numbers)

col_numbers = []
for col_index in range(img.width):
    col = [data[r][col_index] for r in range(img.height)]
    col_number = [len(x) for x in split_at(col, lambda x: x == 0) if x]
    col_numbers.append(col_number)
pprint(col_numbers)

assert row_numbers == [
    [7, 4, 1, 2, 3, 7],
    [1, 1, 2, 2, 1, 1, 1],
    [1, 3, 1, 4, 1, 1, 1, 3, 1],
    [1, 3, 1, 2, 2, 2, 1, 1, 3, 1],
    [1, 3, 1, 1, 1, 3, 2, 1, 3, 1],
    [1, 1, 1, 2, 2, 2, 1, 1, 1],
    [7, 1, 1, 1, 1, 1, 1, 1, 7],
    [3, 3, 1],
    [1, 5, 1, 1, 1, 1, 5, 1],
    [2, 1, 1, 1, 4, 2, 3, 2],
    [1, 1, 2, 1, 4, 1, 2, 2, 1],
    [5, 2, 1, 3, 2, 2, 2, 1],
    [1, 1, 1, 3, 3, 1, 1],
    [2, 3, 2, 5, 4, 2],
    [1, 1, 3, 1, 5, 1, 2, 1, 1, 1],
    [1, 2, 4, 1, 1, 1, 1, 2, 1],
    [1, 3, 2, 1, 1, 3, 3, 1, 3],
    [1, 1, 1, 1, 2, 2, 7, 3],
    [1, 1, 1, 1, 2, 1, 4, 1, 2],
    [1, 2, 4, 1, 1, 1, 1, 1, 2, 2],
    [1, 4, 4, 2, 7],
    [2, 4, 1, 1, 1],
    [7, 1, 8, 1, 1, 1],
    [1, 1, 2, 1, 1, 1, 1, 2, 1],
    [1, 3, 1, 2, 1, 4, 7],
    [1, 3, 1, 2, 1, 1, 5, 2],
    [1, 3, 1, 4, 4, 2, 4],
    [1, 1, 2, 1, 4, 2, 2],
    [7, 1, 1, 1, 4, 1, 1, 4, 1]
]
assert col_numbers == [
    [7, 1, 5, 5, 7],
    [1, 1, 1, 1, 1, 1, 1],
    [1, 3, 1, 2, 2, 1, 4, 1, 3, 1],
    [1, 3, 1, 4, 1, 2, 2, 1, 3, 1],
    [1, 3, 1, 1, 1, 6, 1, 1, 3, 1],
    [1, 1, 2, 2, 2, 1, 1],
    [7, 1, 1, 1, 1, 1, 3, 7],
    [2, 2, 1],
    [1, 6, 2, 2, 1, 1, 4, 1],
    [1, 2, 1, 1, 2, 1, 1, 2, 4],
    [1, 1, 1, 3, 1, 2, 3, 1, 3],
    [3, 1, 1, 2, 1, 1, 5],
    [1, 4, 1, 2, 5, 1],
    [1, 1, 1, 2, 3, 3, 1],
    [1, 1, 7, 1, 1, 1, 2, 1, 3],
    [2, 2, 4, 5, 2, 1, 1, 1],
    [1, 2, 1, 6, 7, 3, 1],
    [1, 3, 2, 1, 1, 1, 3, 1],
    [1, 1, 2, 2, 2, 2, 2, 1],
    [1, 1, 1, 1, 1, 1, 3, 1, 1, 2],
    [1, 5, 2, 2, 2, 6, 1],
    [2, 7, 1, 3],
    [7, 2, 1, 2, 1, 1, 1, 1, 2],
    [1, 1, 3, 1, 2, 1, 1, 1],
    [1, 3, 1, 4, 3, 8, 3],
    [1, 3, 1, 1, 1, 1, 1, 3, 2, 3],
    [1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1],
    [1, 1, 2, 1, 3, 1, 3],
    [7, 2, 1, 2, 2, 1, 1, 1, 1, 2]
]
